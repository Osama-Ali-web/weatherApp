{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN STACK\\\\weather\\\\src\\\\components\\\\Forecast.jsx\";\nimport React, { useContext } from \"react\";\nimport AppContext from \"../provider/appContext\";\nimport Card from \"./Card\";\nimport Loader from \"./Loader\";\nimport Temperature from \"./Temperature\";\nfunction Forecast() {\n  const {\n    app\n  } = useContext(AppContext);\n  if (!app.weather) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    });\n  }\n  const {\n    daily\n  } = app.weather;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forecast-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, daily.map((weather, index) => {\n    let date = new Date(weather.dt * 1000);\n    const dayFormatter = Intl.DateTimeFormat([], {\n      weekday: \"long\",\n      timeZone: weather.timezone\n    });\n    return /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      className: \"forecast-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forecast-day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, dayFormatter.format(date)), /*#__PURE__*/React.createElement(\"img\", {\n      src: `/weather_icons/${weather.weather[0].icon}.png`,\n      alt: \"icon\",\n      width: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forecast-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, weather.weather[0].description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"minmax-temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Temperature, {\n      temperature: weather.temp.max,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }), \"\\xB0\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Temperature, {\n      temperature: weather.temp.min,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), \"\\xB0\")));\n  }));\n}\nexport default Forecast;","map":{"version":3,"names":["React","useContext","AppContext","Card","Loader","Temperature","Forecast","app","weather","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","daily","className","map","index","date","Date","dt","dayFormatter","Intl","DateTimeFormat","weekday","timeZone","timezone","key","format","src","icon","alt","width","description","temperature","temp","max","min"],"sources":["D:/MERN STACK/weather/src/components/Forecast.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport AppContext from \"../provider/appContext\";\nimport Card from \"./Card\";\nimport Loader from \"./Loader\";\nimport Temperature from \"./Temperature\";\n\nfunction Forecast() {\n  const { app } = useContext(AppContext);\n  if (!app.weather) {\n    return <Loader />;\n  }\n\n  const { daily } = app.weather;\n  return (\n    <div className=\"forecast-container\">\n      {daily.map((weather, index) => {\n        let date = new Date(weather.dt * 1000);\n        const dayFormatter = Intl.DateTimeFormat([], {\n          weekday: \"long\",\n          timeZone: weather.timezone,\n        });\n        return (\n          <Card key={index} className=\"forecast-card\">\n            <div className=\"forecast-day\">{dayFormatter.format(date)}</div>\n            <img\n              src={`/weather_icons/${weather.weather[0].icon}.png`}\n              alt=\"icon\"\n              width={100}\n            />\n            <div className=\"forecast-description\">\n              {weather.weather[0].description}\n            </div>\n            <div className=\"minmax-temp\">\n              <Temperature temperature={weather.temp.max} />°\n              <span>\n                <Temperature temperature={weather.temp.min} />°\n              </span>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Forecast;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}